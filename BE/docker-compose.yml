version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ticket-box-be
    env_file: .env
    environment:
      DB_HOST: mysql
      DB_PORT: ${DB_PORT:-3306}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT:-6379}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672}
      NODE_ENV: ${NODE_ENV:-production}
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads:rw
    networks:
      - ticket_net

  mysql:
    image: mysql:8.0
    container_name: mysql-ticket
    command: --default-authentication-plugin=mysql_native_password
    environment:
      # Nếu app đăng nhập bằng root, đảm bảo DB_USERNAME=root và:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: ${DB_DATABASE}
      # Nếu muốn user riêng (không dùng root), bỏ comment 2 dòng dưới và đặt trong .env:
      # MYSQL_USER: ${MYSQL_USER}
      # MYSQL_`PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -pexample || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ticket_net

  redis:
    image: redis:7-alpine
    container_name: redis-ticket
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ticket_net
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-ticket
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
    networks:
      - ticket_net

volumes:
  mysql_data:
  redis_data:

networks:
  ticket_net:
    driver: bridge